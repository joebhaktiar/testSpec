/* eslint-disable max-len */
// const { value } = require("jsonpath")

const wagesPPP = 6000
const wagesYTD = 60000
const taxesPPP = 500
const taxesYTD = 5000
describe('Results', () => {
    it('Results Under Payment', () => {
        cy.get('@contentJSON').then((content) => {
          const formatter = new Intl.NumberFormat('en-US', {
            style: 'currency',
            currency: 'USD',
            minimumFractionDigits: 0
            })
          cy.aboutYouPage('single')
          cy.incomePage('salary', 'allYear', 'monthly', wagesPPP, wagesYTD, taxesPPP, taxesYTD)
          cy.adjustmentsPage()
          cy.deductionsPage()
          // tax Credits
          cy.get('[data-testid=childCreditsAccordion-trigger]').click()
          cy.get('[data-testid=childrenAges-input]').type('hi$,()15').should('have.value', '15')
          cy.get('[data-testid="nextButton"]').click()
          // Results Box
            cy.get('[data-testid=yourResultsTitle]').should('have.text', content.results.yourResultsTitle).and('be.visible')
            cy.get('[data-testid=yourResultsSubtitle]').should('have.text', content.results.yourResultsSubtitle).and('be.visible')
            // eslint-disable-next-line max-len
            cy.get('[data-testid=resultsAccuracyParagraph1]').should('have.text', content.results.resultsAccuracyParagraph1Owe).and('be.visible')
            cy.get('[data-testid=expectedTaxLabel]').should('have.text', content.results.expectedTaxLabel).and('be.visible')
            cy.get('[data-testid=anticipatedTaxLabel]').should('have.text', content.results.anticipatedTaxLabel).and('be.visible')
            cy.get('[data-testid=estimatedLabel]').should('have.text', content.results.estimatedLabelOwe).and('be.visible')
            const expectedWithholding = ((taxesYTD) + ((taxesPPP) * 4))
            // expected tax value
            cy.get('[data-testid=expectedTaxValue]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
            const totalPreTaxValue = ((wagesYTD) + ((wagesPPP) * 4))
            const agiAmount = (totalPreTaxValue - (12550))
            // Taxable Income
            cy.get('[data-testid=taxBeforeCreditsTaxableIncomeValue]').should('have.text', `${formatter.format(agiAmount)}`).and('be.visible')
            // Anticipate Tax Value
            cy.antTaxFuntion(agiAmount).then((Value) => {
            const anttax2 = Value
            const childTaxCredit = 2000
            const anticipatedTaxValue = anttax2 - childTaxCredit
            cy.get('[data-testid=anticipatedTaxValue]').should('have.text', `${formatter.format(anticipatedTaxValue)}`)
                    })
            // Gross before taxes
            cy.get('[data-testid=incomeWithholdingTotalPreTaxValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            // Estimated Payment
            cy.antTaxFuntion(agiAmount).then((value) => cy.get('[data-testid=estimatedValue]').should('have.text', `${formatter.format((value) - (expectedWithholding) - 2000)}`))
            // Notes
            cy.get('[data-testid=resultsAccuracyParagraph]').should('have.text', content.results.notesResultsAccuracyParagraph).and('be.visible')
            cy.get('[data-testid=firstAsteriskLabel]').should('have.text', content.results.noteFirstAsteriskLabel).and('be.visible')
            cy.get('[data-testid=secondAsteriskLabel]').should('have.text', content.results.notesecondAsteriskLabel).and('be.visible')
          // Slider
          // cy.get('[data-testid=sliderTitle]').should('have.text', content.results.sliderTitleOwe).and('be.visible')
          cy.get('[data-testid=sliderSubtitle]').should('have.text', content.results.sliderSubtitle).and('be.visible')
          // Recommendations
          cy.get('[data-testid=salaryIntroHeading0]').should('have.text', `${content.results.recommendationIntro} ${formatter.format(totalPreTaxValue)}`).and('be.visible')
          // Accordion
          cy.get('[data-testid=yourInformationHeader]').should('have.text', 'Your Information').and('be.visible')
          cy.get('.border.border-gray-400 > :nth-child(2)').should('have.text', content.results.yourInformationParagraph).and('be.visible')
            // About you
            cy.get('[data-testid=aboutYou-title]').should('have.text', content.results.aboutYouTitle).and('be.visible')
            cy.get('[datatestid=deductionsEditButton]').should('be.visible')
            cy.get('[data-testid=aboutYouFilingStatusLabel]').should('have.text', content.results.ayFilingStatusLabel).and('be.visible')
            cy.get('[data-testid=aboutYouFilingStatusValue]').should('have.text', 'Single').and('be.visible')
            cy.get('[data-testid=aboutYouClaimedAsDependentLabel]').should('have.text', content.results.ayClaimedAsDependentLabel).and('be.visible')
            cy.get('[data-testid=aboutYouClaimedAsDependentValue]').should('have.text', 'No').and('be.visible')
            // Income and Withholding
            cy.get('[data-testid=incomeWithholding-title]').should('have.text', content.results.incomeNwitholdingTitle).and('be.visible')
            cy.get('[datatestid=incomeWithholdingEditButton]').should('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalPreTaxLabel]').should('have.text', content.results.inwTotalPretaxIncomLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalPreTaxValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            cy.get('[data-testid=incomeWithholdingNetIncomeLabel]').should('have.text', content.results.inwNetIncomeLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingNetIncomeValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalFedIncomeLabel]').should('have.text', content.results.inwTotalwithheld).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalFedIncomeValue]').should('have.text', `${formatter.format(taxesYTD)}`).and('be.visible')
            cy.get('[data-testid=incomeWithholdingProjectedWithheldLabel]').should('have.text', content.results.inwProjectedWithheld).and('be.visible')
            cy.get('[data-testid=incomeWithholdingProjectedWithheldValue]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
              // Expand first job
              cy.get('[data-testid=jobNestedAccordion1-trigger]').click()
              cy.get('[data-testid=incomeJobWagesTips1Label]').should('have.text', content.results.incomJobWagesLabel).and('be.visible')
              cy.get('[data-testid=incomeJobWagesTips1Value]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
              cy.get('[data-testid=incomeJobTotalFedIncome1Label]').should('have.text', content.results.incomeFederalIncomLabel).and('be.visible')
              cy.get('[data-testid=incomeJobTotalFedIncome1Value]').should('have.text', `${formatter.format(taxesYTD)}`).and('be.visible')
              cy.get('[data-testid=incomeJobTotalNonTaxable1Label]').should('have.text', content.results.incomeNontaxDeductions).and('be.visible')
              cy.get('[data-testid=incomeJobTotalNonTaxable1Value]').should('have.text', `${formatter.format(0)}`).and('be.visible')
              cy.get('[data-testid=incomeJobProjectedTotalTax1Label]').should('have.text', content.results.incomeProjectedW4).and('be.visible')
              cy.get('[data-testid=incomeJobProjectedTotalTax1Value]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
            // Adjustments
            cy.get('[data-testid=adjustments-title]').should('have.text', content.results.adjustmentsTitle).and('be.visible')
            cy.get('[datatestid=adjustmentsSubtitle]').should('have.text', content.results.adjustmentsSubTitle).and('be.visible')
            cy.get('[datatestid=adjustmentsEditButton]').should('be.visible')
            // Adjustments Gross Income
            cy.get('[data-testid=agi-title]').should('have.text', content.results.agiTitle).and('be.visible')
            cy.get('[datatestid=agiSubtitle]').should('have.text', content.results.agiSubTitle).and('be.visible')
            cy.get('[data-testid=adjustedGrossIncomeLabel]').should('have.text', 'AGI').and('be.visible')
            cy.get('[data-testid=adjustedGrossIncomeValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            // Deductions
            cy.get('[data-testid=deductions-title]').should('have.text', content.results.deductionTitle).and('be.visible')
            cy.get('[datatestid=deductionsSubtitle]').should('have.text', content.results.deductionSubTitle).and('be.visible')
            cy.get('[datatestid=deductionsEditButton]').should('be.visible')
            cy.get('[data-testid=deductionsStandardDeductionLabel]').should('have.text', content.results.deductionsStandardDeduction).and('be.visible')
            cy.get('[data-testid=deductionsStandardDeductionValue]').should('have.text', `${formatter.format(12550)}`).and('be.visible')
            // Tax Before Credits
            cy.get('[data-testid=taxBeforeCredits-title]').should('have.text', content.results.taxBeforeCreditsTitle).and('be.visible')
            cy.get('[data-testid=taxBeforeCreditsTaxableIncomeLabel]').should('have.text', content.results.taxBCTaxableIncome).and('be.visible')
            cy.get('[data-testid=taxBeforeCreditsTaxableIncomeValue]').should('have.text', `${formatter.format(agiAmount)}`).and('be.visible')
            cy.get('[data-testid=taxBeforeCreditsIncomeTaxCredsLabel]').should('have.text', content.results.taxBCIncomeBeforecCredits).and('be.visible')
            cy.antTaxFuntion(agiAmount).then((value) => cy.get('[data-testid=taxBeforeCreditsIncomeTaxCredsValue]').should('have.text', `${formatter.format((value))}`))
            // Tax Credits
            cy.get('[data-testid=taxCredits-title]').should('have.text', content.results.taxCreditsTitle).and('be.visible')
            cy.get('[datatestid=taxCreditsEditButton]').should('be.visible')
            // cy.get('[data-testid=taxCreditsCreditOfOtherDepLabel]').should('have.text', content.results.taxCreditsOtherDependents).and('be.visible')
            // cy.get('[data-testid=taxCreditsCreditOfOtherDepValue]').should('have.text', `${formatter.format(0)}`).and('be.visible')
            // cy.get('[data-testid=taxCreditsNumOfChildDependentCareQCLabel]').should('have.text', content.results.taxCreditsCareTaxCredit).and('be.visible')
            // cy.get('[data-testid=taxCreditsNumOfChildDependentCareQCValue]').should('have.text', '0').and('be.visible')
            // cy.get('[data-testid=taxCreditsChildTaxCreditLabel]').should('have.text', content.results.taxCreditsChildTaxCredit).and('be.visible')
            // cy.get('[data-testid=taxCreditsChildTaxCreditValue]').should('have.text', `${formatter.format(0)}`).and('be.visible')
            // cy.get('[data-testid=taxCreditsTaxCreditTotalLabel]').should('have.text', content.results.taxCreditsTotalCredits).and('be.visible')
            // cy.get('[data-testid=taxCreditsTaxCreditTotalValue]').should('have.text', 'placeholder').and('be.visible')
            // Tax After Credits
            cy.get('[data-testid=taxAfterCredits-title]').should('have.text', content.results.taxAfterCreditsTitle).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalLiabilityAfterCredsLabel]').should('have.text', content.results.taxACLiabilityAfterCredits).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalLiabilityAfterCredsValue]').should('have.text', '$9,473')
            cy.get('[data-testid=taxAfterCreditsTotalTaxPaidThisYearIfNothingLabel]').should('have.text', content.results.taxACTotalTaxIfDoNothing).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalTaxPaidThisYearIfNothingValue]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalPaidSoFarLabel]').should('have.text', content.results.taxACYTDPaid).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalPaidSoFarValue]').should('have.text', `${formatter.format(taxesYTD)}`).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalTaxPaidW4Label]').should('have.text', content.results.taxACTaxPaidIfRecommended).and('be.visible')
            cy.antTaxFuntion(agiAmount).then((value) => cy.get('[data-testid=taxAfterCreditsTotalLiabilityAfterCredsValue]').should('have.text', `${formatter.format((value) - 2000)}`))
            cy.get('.MuiSlider-thumb').invoke('attr', 'style', 'left: 74.4301%;')
            cy.get('[data-testid=salaryIntroParagraph20] > .font-bold').should('be.visible')
            cy.get('[data-testid=salaryIntroParagraph20] > .font-bold').should('have.text', '$956')

          // Buttons
          cy.get('[data-testid=backButton]').should('be.visible')
          cy.get('.buttons > [data-testid=printButton]').should('be.visible')
          cy.get('[data-testid=startOverLink]').should('be.visible')
            })
    })
    it('Results Over Payment', () => {
      cy.get('@contentJSON').then((content) => {
        const formatter = new Intl.NumberFormat('en-US', {
          style: 'currency',
          currency: 'USD',
          minimumFractionDigits: 0
          })
          // Date
          cy.clock(Date.UTC(2021, 9, 5), ['Date'])
          const refundWagesPPP = 50
          const refundWagesYTD = 58000
          const refundTaxesPPP = 100
          const refundTaxesYTD = 6600
          cy.aboutYouPage('single')
          cy.incomePage('salary', 'allYear', 'monthly', refundWagesPPP, refundWagesYTD, refundTaxesPPP, refundTaxesYTD)
          cy.adjustmentsPage()
          cy.deductionsPage()
          // Tax Credits
          cy.get('[data-testid=childCreditsAccordion-trigger]').click()
          cy.get('[data-testid=childrenAges-input]').type('hi$,()15').should('have.value', '15')
          cy.get('[data-testid="nextButton"]').click()
          // Results Box
            cy.get('[data-testid=yourResultsTitle]').should('have.text', content.results.yourResultsTitle).and('be.visible')
            cy.get('[data-testid=yourResultsSubtitle]').should('have.text', content.results.yourResultsSubtitle).and('be.visible')
            // eslint-disable-next-line max-len
            cy.get('[data-testid=resultsAccuracyParagraph1]').should('have.text', content.results.resultsAccuracyParagraph1Refund).and('be.visible')
            cy.get('[data-testid=expectedTaxLabel]').should('have.text', content.results.expectedTaxLabel).and('be.visible')
            cy.get('[data-testid=anticipatedTaxLabel]').should('have.text', content.results.anticipatedTaxLabel).and('be.visible')
            cy.get('[data-testid=estimatedLabel]').should('have.text', content.results.estimatedLabelRefund).and('be.visible')
            const expectedWithholding = ((refundTaxesYTD) + ((refundTaxesPPP) * 4))
            // expected tax value
            cy.get('[data-testid=expectedTaxValue]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
            const totalPreTaxValue = ((refundWagesYTD) + ((refundWagesPPP) * 4))
            const agiAmount = (totalPreTaxValue - (12550))
            // Taxable Income
            cy.get('[data-testid=taxBeforeCreditsTaxableIncomeValue]').should('have.text', `${formatter.format(agiAmount)}`).and('be.visible')
            // Anticipate Tax Value
            cy.antTaxFuntion(agiAmount).then((Value) => {
              const anttax2 = Value
              const childTaxCredit = 2000
              const anticipatedTaxValue = anttax2 - childTaxCredit
              cy.get('[data-testid=anticipatedTaxValue]').should('have.text', `${formatter.format(anticipatedTaxValue)}`)
            })
            // Gross before taxes
            cy.get('[data-testid=incomeWithholdingTotalPreTaxValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            // Estimated Payment
            cy.antTaxFuntion(agiAmount).then((value) => cy.get('[data-testid=estimatedValue]').should('have.text', `${formatter.format(((value) - (expectedWithholding) - 2000) * (-1))}`))
            // Notes
            cy.get('[data-testid=resultsAccuracyParagraph]').should('have.text', content.results.notesResultsAccuracyParagraph).and('be.visible')
            cy.get('[data-testid=firstAsteriskLabel]').should('have.text', content.results.noteFirstAsteriskLabel).and('be.visible')
            cy.get('[data-testid=secondAsteriskLabel]').should('have.text', content.results.notesecondAsteriskLabel).and('be.visible')
          // Slider
          cy.get('[data-testid=sliderTitle]').should('have.text', content.results.sliderTitleRefund).and('be.visible')
          cy.get('[data-testid=sliderTitle2]').should('have.text', content.results.sliderSubtitle2Refund).and('be.visible')
          cy.get('[data-testid=sliderSubtitle]').should('have.text', content.results.sliderSubtitle).and('be.visible')
          // Recommendations
          cy.get('[data-testid=yourInformationHeader]').should('have.text', 'Your Information').and('be.visible')
          cy.get('.border.border-gray-400 > :nth-child(2)').should('have.text', content.results.yourInformationParagraph).and('be.visible')
          cy.get('.MuiSlider-thumb').invoke('attr', 'style', 'left: 93.6622%;')
          cy.get('.MuiSlider-thumb').click()
          cy.get('[data-testid=salaryIntroHeading0]').should('have.text', content.results.salaryIntroHeading0).and('be.visible')
          cy.get('[data-testid=salaryIntroParagraph10]').should('have.text', content.results.salaryIntroParagraph10).and('be.visible')
          cy.get('[data-testid=salaryIntroParagraph20]').should('have.text', content.results.salaryIntroParagraph20).and('be.visible')
          // Accordion
          cy.get('[data-testid=recommendationAccordion0-trigger] > .fill-current').click()
          cy.get('[data-testid=salaryAccordionParagraph1-0]').should('have.text', content.results.accordionParagraph1).and('be.visible')
          cy.get('[data-testid=salaryAccordionParagraph2-0]').should('have.text', content.results.accordionParagraph2).and('be.visible')
          cy.get('[data-testid=salaryAccordionParagraph3-0]').should('have.text', content.results.accordionParagraph3).and('be.visible')
          cy.get('[data-testid=salaryAccordionParagraph4-0]').should('have.text', content.results.accordionParagraph4).and('be.visible')
          cy.get('p.inline').should('have.text', content.results.accordionParagraph5).and('be.visible')
          cy.get('[data-testid=salaryAccordionParagraph6-0]').should('have.text', content.results.accordionParagraph6).and('be.visible')
          cy.get('[data-testid=resultsWithholding-helpTip-button] > .svg-inline--fa').click()
          cy.get('[data-testid=resultsWithholdingToolTip]').should('have.text', content.results.accordionTooltip).and('be.visible')
            // About you
            cy.get('[data-testid=aboutYou-title]').should('have.text', content.results.aboutYouTitle).and('be.visible')
            cy.get('[datatestid=deductionsEditButton]').should('be.visible')
            cy.get('[data-testid=aboutYouFilingStatusLabel]').should('have.text', content.results.ayFilingStatusLabel).and('be.visible')
            cy.get('[data-testid=aboutYouFilingStatusValue]').should('have.text', 'Single').and('be.visible')
            cy.get('[data-testid=aboutYouClaimedAsDependentLabel]').should('have.text', content.results.ayClaimedAsDependentLabel).and('be.visible')
            cy.get('[data-testid=aboutYouClaimedAsDependentValue]').should('have.text', 'No').and('be.visible')
            // Income and Withholding
            cy.get('[data-testid=incomeWithholding-title]').should('have.text', content.results.incomeNwitholdingTitle).and('be.visible')
            cy.get('[datatestid=incomeWithholdingEditButton]').should('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalPreTaxLabel]').should('have.text', content.results.inwTotalPretaxIncomLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalPreTaxValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            cy.get('[data-testid=incomeWithholdingNetIncomeLabel]').should('have.text', content.results.inwNetIncomeLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingNetIncomeValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalFedIncomeLabel]').should('have.text', content.results.inwTotalwithheld).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalFedIncomeValue]').should('have.text', `${formatter.format(refundTaxesYTD)}`).and('be.visible')
            cy.get('[data-testid=incomeWithholdingProjectedWithheldLabel]').should('have.text', content.results.inwProjectedWithheld).and('be.visible')
            cy.get('[data-testid=incomeWithholdingProjectedWithheldValue]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
              // Expand first job
              cy.get('[data-testid=jobNestedAccordion1-trigger]').click()
              cy.get('[data-testid=incomeJobWagesTips1Label]').should('have.text', content.results.incomJobWagesLabel).and('be.visible')
              cy.get('[data-testid=incomeJobWagesTips1Value]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
              cy.get('[data-testid=incomeJobTotalFedIncome1Label]').should('have.text', content.results.incomeFederalIncomLabel).and('be.visible')
              cy.get('[data-testid=incomeJobTotalFedIncome1Value]').should('have.text', `${formatter.format(refundTaxesYTD)}`).and('be.visible')
              cy.get('[data-testid=incomeJobTotalNonTaxable1Label]').should('have.text', content.results.incomeNontaxDeductions).and('be.visible')
              cy.get('[data-testid=incomeJobTotalNonTaxable1Value]').should('have.text', `${formatter.format(0)}`).and('be.visible')
              cy.get('[data-testid=incomeJobProjectedTotalTax1Label]').should('have.text', content.results.incomeProjectedW4).and('be.visible')
              cy.get('[data-testid=incomeJobProjectedTotalTax1Value]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
            // Adjustments
            cy.get('[data-testid=adjustments-title]').should('have.text', content.results.adjustmentsTitle).and('be.visible')
            cy.get('[datatestid=adjustmentsSubtitle]').should('have.text', content.results.adjustmentsSubTitle).and('be.visible')
            cy.get('[datatestid=adjustmentsEditButton]').should('be.visible')
            // Adjustments Gross Income
            cy.get('[data-testid=agi-title]').should('have.text', content.results.agiTitle).and('be.visible')
            cy.get('[datatestid=agiSubtitle]').should('have.text', content.results.agiSubTitle).and('be.visible')
            cy.get('[data-testid=adjustedGrossIncomeLabel]').should('have.text', 'AGI').and('be.visible')
            cy.get('[data-testid=adjustedGrossIncomeValue]').should('have.text', `${formatter.format(totalPreTaxValue)}`).and('be.visible')
            // Deductions
            cy.get('[data-testid=deductions-title]').should('have.text', content.results.deductionTitle).and('be.visible')
            cy.get('[datatestid=deductionsSubtitle]').should('have.text', content.results.deductionSubTitle).and('be.visible')
            cy.get('[datatestid=deductionsEditButton]').should('be.visible')
            cy.get('[data-testid=deductionsStandardDeductionLabel]').should('have.text', content.results.deductionsStandardDeduction).and('be.visible')
            cy.get('[data-testid=deductionsStandardDeductionValue]').should('have.text', `${formatter.format(12550)}`).and('be.visible')
            // Tax Before Credits
            cy.get('[data-testid=taxBeforeCredits-title]').should('have.text', content.results.taxBeforeCreditsTitle).and('be.visible')
            cy.get('[data-testid=taxBeforeCreditsTaxableIncomeLabel]').should('have.text', content.results.taxBCTaxableIncome).and('be.visible')
            cy.get('[data-testid=taxBeforeCreditsTaxableIncomeValue]').should('have.text', `${formatter.format(agiAmount)}`).and('be.visible')
            cy.get('[data-testid=taxBeforeCreditsIncomeTaxCredsLabel]').should('have.text', content.results.taxBCIncomeBeforecCredits).and('be.visible')
            cy.antTaxFuntion(agiAmount).then((value) => cy.get('[data-testid=taxBeforeCreditsIncomeTaxCredsValue]').should('have.text', `${formatter.format((value))}`))
            cy.get('[data-testid=taxAfterCredits-title]').should('have.text', content.results.taxAfterCreditsTitle).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalLiabilityAfterCredsLabel]').should('have.text', content.results.taxACLiabilityAfterCredits).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalLiabilityAfterCredsValue]').should('have.text', '$3,797')
            cy.get('[data-testid=taxAfterCreditsTotalTaxPaidThisYearIfNothingLabel]').should('have.text', content.results.taxACTotalTaxIfDoNothing).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalTaxPaidThisYearIfNothingValue]').should('have.text', `${formatter.format(expectedWithholding)}`).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalPaidSoFarLabel]').should('have.text', content.results.taxACYTDPaid).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalPaidSoFarValue]').should('have.text', `${formatter.format(refundTaxesYTD)}`).and('be.visible')
            cy.get('[data-testid=taxAfterCreditsTotalTaxPaidW4Label]').should('have.text', content.results.taxACTaxPaidIfRecommended).and('be.visible')
            cy.antTaxFuntion(agiAmount).then((value) => cy.get('[data-testid=taxAfterCreditsTotalLiabilityAfterCredsValue]').should('have.text', `${formatter.format((value) - 2000)}`))
            cy.get('.MuiSlider-thumb').invoke('attr', 'style', 'left: 74.4301%;')
            cy.get('[data-testid=salaryIntroParagraph20] > .font-bold').should('have.text', '$483')
          // Buttons
          cy.get('[data-testid=backButton]').should('be.visible')
          cy.get('.buttons > [data-testid=printButton]').should('be.visible')
          cy.get('[data-testid=startOverLink]').should('be.visible')
          cy.clock().invoke('restore')
         })
     })
     it('Tax Credit Results', () => {
      cy.get('@contentJSON').then((content) => {
          cy.aboutYouPage('single')
          cy.incomePage('salary', 'allYear', 'monthly', '6000', '60000', '1000', '10000')
          cy.adjustmentsPage()
          cy.deductionsPage()
          cy.get('[data-testid=childCreditsAccordion-trigger]').click()
          cy.get('[data-testid=childrenAges-input]').type(15)
          cy.get('[data-testid=numOfChildDependentCareQC-plus]').click()
          cy.get('[data-testid=childDependentCareAmount-input]').type(1500)
          cy.get('[data-testid=numOfEitcQC-plus]').click()
          cy.get('[data-testid=adoptionCreditAmount-input]').type(2000)
          cy.get('[data-testid=foreignTaxAccordion-trigger]').click()
          cy.get('[data-testid=educationalAccordion-trigger]').click()
          cy.get('[data-testid=retirementSavingsAccordion-trigger]').click()
          cy.get('[data-testid=homeOwnerTaxAccordion-trigger]').click()
          cy.get('[data-testid=elderlyTaxAccordion-trigger]').click()
          cy.get('[data-testid=businessAccordion-trigger]').click()
          cy.get('[data-testid=alternativeMinimumCreditAccordion-trigger]').click()
          cy.get('[data-testid=energyTaxCreditAccordion-trigger]').click()
          cy.get('[data-testid=foreignTaxCredit-input]').type(500)
          cy.get('[data-testid=numOfStudents-plus] > .fa-plus').click()
          cy.get('[data-testid=aotc-input]').type(2000)
          cy.get('[data-testid=retirementSavingsCredit-input]').type(500)
          cy.get('[data-testid=homeOwnerTaxCredit-input]').type(500)
          cy.get('[data-testid=homeOwnerMortgageTaxCredit-input]').type(500)
          cy.get('[data-testid=elderlyTaxCredit-input]').type(500)
          cy.get('[data-testid=businessCredit-input]').type(500)
          cy.get('[data-testid=alternativeMinimumCredit-input]').type(500)
          cy.get('[data-testid=energyMotorVehicleTaxCredit-input]').type(500)
          cy.get('[data-testid=energyRefuelingTaxCredit-input]').type(500)
          cy.get('[data-testid=energyPlugInTaxCredit-input]').type(500)
          cy.get('[data-testid=nextButton]').click()

          cy.get('[data-testid=taxCredits-trigger] > .fill-current').click()
          cy.get('[data-testid=taxCredits-trigger] > .fill-current').click()
          cy.get('[data-testid=taxCredits-title]').should('have.text', 'Tax credits')

          cy.get(':nth-child(1) > [data-testid=taxCreditsTaxCreditTotalLabel]').should('have.text', content.results.taxCreditsTaxCreditTotalLabel1).and('be.visible')
          cy.get('[data-testid=taxCreditsNumOfChildDependentCareQCLabel]').should('have.text', content.results.taxCreditsNumOfChildDependentCareQCLabel).and('be.visible')
          cy.get(':nth-child(3) > [data-testid=taxCreditsNumOfStudentsLabel]').should('have.text', content.results.taxCreditsNumOfStudentsLabel).and('be.visible')
          // cy.get(':nth-child(4) > [data-testid=taxCreditsTaxCreditTotalLabel]').should('have.text', content.results.taxCreditsTaxCreditTotalLabel2).and('be.visible')
          cy.get('[data-testid=taxCreditsforeignTaxCreditLabel]').should('have.text', content.results.taxCreditsforeignTaxCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditshomeOwnerTaxCreditLabel]').should('have.text', content.results.taxCreditshomeOwnerTaxCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditselderlyTaxCreditLabel]').should('have.text', content.results.taxCreditselderlyTaxCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsalternativeMinimumCreditLabel]').should('have.text', content.results.taxCreditsalternativeMinimumCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsenergyRefuelingTaxCreditLabel]').should('have.text', content.results.taxCreditsenergyRefuelingTaxCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsadoptionCreditAmountLabel]').should('have.text', content.results.taxCreditsadoptionCreditAmountLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsretirementSavingsCreditLabel]').should('have.text', content.results.taxCreditsretirementSavingsCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditshomeOwnerMortgageTaxCreditLabel]').should('have.text', content.results.taxCreditshomeOwnerMortgageTaxCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsbusinessCreditLabel]').should('have.text', content.results.taxCreditsbusinessCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsenergyMotorVehicleTaxCreditLabel]').should('have.text', content.results.taxCreditsenergyMotorVehicleTaxCreditLabel).and('be.visible')
          cy.get('[data-testid=taxCreditsenergyPlugInTaxCreditLabel]').should('have.text', content.results.taxCreditsenergyPlugInTaxCreditLabel).and('be.visible')
          cy.get(':nth-child(16) > [data-testid=taxCreditsTaxCreditTotalLabel]').should('have.text', content.results.taxCreditsTaxCreditTotalLabel3).and('be.visible')
})
      })
          it('Adjustment Results', () => {
          cy.get('@contentJSON').then((content) => {
          cy.aboutYouPage('single')
          cy.incomePage('salary', 'allYear', 'monthly', '6000', '60000', '1000', '10000')
          cy.get(':nth-child(1) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.studentLoan).and('be.visible').click()
          cy.get('[data-testid="studentLoan-callout"]').should('have.text', content.adjustments.studentLoancallout).and('be.visible')
          cy.get('[data-testid=studentLoan0-label]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="studentLoan0-input"]').type('999999999').should('have.value', '$999,999,999').clear()
          cy.get('[data-testid="studentLoan0-input"]').type('hi$,()500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $500').and('be.visible').click()
          // Educator Expense Deduction
          cy.get(':nth-child(2) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.educator).and('be.visible').click()
          cy.get('[data-testid="educator-callout"]').should('have.text', content.adjustments.educatorcallout).and('be.visible')
          cy.get('[data-testid="educator0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="addAnother-educator"]').should('have.text', content.addAnotherButton).and('be.visible')
          cy.get('[data-testid="educator0-input"]').type('hi$,()500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $1,000').and('be.visible').click()
            // Deduction for contributions to an IRA
           cy.get(':nth-child(3) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.ira).and('be.visible').click()
           cy.get('[data-testid="ira0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
           cy.get('[data-testid="addAnother-ira"]').should('have.text', content.addAnotherButton).and('be.visible')
           cy.get('[data-testid="ira0-input"]').type('hi$,()500').should('have.value', '$500')
           cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $1,500').and('be.visible').click()
            // Health Savings Account Deduction
          cy.get(':nth-child(4) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.hsa).and('be.visible').click()
          cy.get('[data-testid="hsa0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="addAnother-hsa"]').should('have.text', content.addAnotherButton).and('be.visible')
          cy.get('[data-testid="hsa0-input"]').type('500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $2,000').and('be.visible').click()
            // Moving Expenses for Members of the Armed Services
          cy.get(':nth-child(5) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.moving).and('be.visible').click()
          cy.get('[data-testid="moving0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="addAnother-moving"]').should('have.text', content.addAnotherButton).and('be.visible')
          cy.get('[data-testid="moving0-input"]').type('500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $2,500').and('be.visible').click()
            // Alimony paid
          cy.get(':nth-child(6) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.alimony).and('be.visible').click()
          cy.get('[data-testid="alimony0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="addAnother-alimony"]').should('have.text', content.addAnotherButton).and('be.visible')
          cy.get('[data-testid="alimony0-input"]').type('500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $3,000').and('be.visible').click()
            // Penalty for Early Withdrawl of Savings
          cy.get(':nth-child(7) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.earlyWithdrawal).and('be.visible').click()
          cy.get('[data-testid="earlyWithdrawal0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="addAnother-earlyWithdrawal"]').should('have.text', content.addAnotherButton).and('be.visible')
          cy.get('[data-testid="earlyWithdrawal0-input"]').type('500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $3,500').and('be.visible').click()
            // Certain business credits for reserviys, performing artists, and fee-based gvernment officials
          cy.get(':nth-child(8) > .mt-1 > .flex > .MuiFormControlLabel-root > .ml-3').should('have.text', content.adjustments.business).and('be.visible').click()
          cy.get('[data-testid="business0-label"]').should('have.text', content.adjustments.requiredEnterAmount).and('be.visible')
          cy.get('[data-testid="addAnother-business"]').should('have.text', content.addAnotherButton).and('be.visible')
          cy.get('[data-testid="business0-input"]').type('500').should('have.value', '$500')
          cy.get('[data-testid="total"]').should('have.text', 'Adjustments entered: $4,000').and('be.visible')
          cy.get('[data-testid=nextButton]').click()
          cy.get('[data-testid=deductions-input-standardDeduction]').click()
          cy.get('[data-testid=nextButton]').click()
          cy.get('[data-testid=nextButton]').click()
          // Results Page
          cy.get('[data-testid=adjustments-title]').should('have.text', content.results.adjustmentsTitle).and('be.visible')
          cy.get('#adjustmentsAccordion > .m-3').should('have.text', content.results.adjustmenysSubTitleAmount).and('be.visible')
          cy.get('[datatestid=adjustmentsEditButton]').should('be.visible')
          cy.get('[data-testid=adjustmentsstudentLoanEnteredLabel]').should('have.text', content.results.adjustmentsstudentLoanEnteredLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsstudentLoanEnteredValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentsstudentLoanAllowedLabel]').should('have.text', content.results.adjustmentsstudentLoanAllowedLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsstudentLoanAllowedValue]').should('have.text', '$142')
          cy.get('[data-testid=adjustmentseducatorEnteredLabel]').should('have.text', content.results.adjustmentseducatorEnteredLabel).and('be.visible')
          cy.get('[data-testid=adjustmentseducatorEnteredValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentseducatorAllowedLabel]').should('have.text', content.results.adjustmentseducatorAllowedLabel).and('be.visible')
          cy.get('[data-testid=adjustmentseducatorAllowedValue]').should('have.text', '$250')
          cy.get('[data-testid=adjustmentsiraLabel]').should('have.text', content.results.adjustmentsiraLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsiraValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentshsaLabel]').should('have.text', content.results.adjustmentshsaLabel).and('be.visible')
          cy.get('[data-testid=adjustmentshsaValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentsmovingLabel]').should('have.text', content.results.adjustmentsmovingLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsmovingValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentsalimonyLabel]').should('have.text', content.results.adjustmentsalimonyLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsalimonyValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentsearlyWithdrawalLabel]').should('have.text', content.results.adjustmentsearlyWithdrawalLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsearlyWithdrawalValue]').should('have.text', '$500')
          cy.get('[data-testid=adjustmentsbusinessLabel]').should('have.text', content.results.adjustmentsbusinessLabel).and('be.visible')
          cy.get('[data-testid=adjustmentsbusinessValue]').should('have.text', '$500')
          // AGI
          cy.get('[data-testid=agi-title]').should('have.text', content.results.agiTitle).and('be.visible')
          cy.get('#agiAccordion > .m-3').should('have.text', content.results.agiSubTitle).and('be.visible')
          cy.get('[data-testid=adjustedGrossIncomeLabel]').should('have.text', content.results.adjustedGrossIncomeLabel).and('be.visible')
          cy.get('[data-testid=adjustedGrossIncomeValue]').should('have.text', '$80,608')
              })
            })
            it('Income Results', () => {
              cy.get('@contentJSON').then((content) => {
              cy.aboutYouPage('single')
              cy.get('[data-testid=incomeType0-input-salary]').click()
              cy.get('[data-testid=timePeriodOfJob0-input-allYear]').click()
              cy.get('[data-testid=payFrequency0-input-monthly]').click()
              cy.get('[data-testid="jobs.0.dateLastPayPeriod"]').type('10/01/2021')
              cy.get('[data-testid=wagesPerPayPeriod0-input]').type('5000')
              cy.get('[data-testid=wagesYTD0-input]').type('80000')
              cy.get('[data-testid=isIncomeAmountCorrect0-input-yes]').click()
              cy.get('[data-testid=taxesPerPayPeriod0-input]').type('700')
              cy.get('[data-testid=taxesYTD0-input]').type('11000')
              cy.get('[data-testid="jobs.0.contributionsAndBonuses.retirement.checked"]').click()
              cy.get('[data-testid=retirement0-0-input]').type('300')
              cy.get('[data-testid=retirement0YTD-0-input]').type('3000')
              cy.get('[data-testid="jobs.0.contributionsAndBonuses.cafeteriaPlan.checked"]').click()
              cy.get('[data-testid=cafeteriaPlan0-0-input]').type('100')
              cy.get('[data-testid=cafeteriaPlan0YTD-0-input]').type('1000')
              cy.get('[data-testid="jobs.0.contributionsAndBonuses.bonusFuture.checked"]').click()
              cy.get('[data-testid=bonusFuture0-0-input]').type('5000')
              cy.get('[data-testid="jobs.0.contributionsAndBonuses.bonusPast.checked"]').click()
              cy.get('[data-testid=bonusPast0-0-input]').type('5000')
              // other type of income
              cy.get('[data-testid="otherIncome.scholarship.checked"]').click()
              cy.get('[data-testid=scholarship0-input]').eq(0).type('250')
              cy.get('[data-testid="otherIncome.unemployment.checked"]').click()
              cy.get('[data-testid=unemployment0-input]').eq(0).type('250')
              cy.get('[data-testid="otherIncome.selfEmployment.checked"]').click()
              cy.get('[data-testid=selfEmployment0-input]').eq(0).type('250')
              cy.get('[data-testid="otherIncome.investments.checked"]').click()
              cy.get('[data-testid=investments0-input]').eq(0).type('250')
              cy.get('[data-testid="otherIncome.otherTaxableIncome.checked"]').click()
              cy.get('[data-testid=otherTaxableIncome0-input]').eq(0).type('250')
              cy.get('[data-testid="otherIncome.otherTaxes.checked"]').click()
              cy.get('[data-testid=otherTaxes0-input]').type('250')
              cy.get('[data-testid=nextButton]').click()
              cy.get('[data-testid=nextButton]').click()
              cy.get('[data-testid=deductions-input-standardDeduction]').click()
              cy.get('[data-testid=nextButton]').click()
              cy.get('[data-testid=nextButton]').click()

              // Income and Withholding
            cy.get('[data-testid=incomeWithholding-title]').should('have.text', content.results.incomeNwitholdingTitle).and('be.visible')
            cy.get('[datatestid=incomeWithholdingEditButton]').should('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalPreTaxLabel]').should('have.text', content.results.inwTotalPretaxIncomLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalPreTaxValue]').should('have.text', '$101,250').and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalRetCafeLabel]').should('have.text', content.results.incomeWithholdingTotalRetCafeLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalRetCafeValue]').should('have.text', '$4,800').and('be.visible')
            cy.get('[data-testid=incomeWithholdingNetIncomeLabel]').should('have.text', content.results.inwNetIncomeLabel).and('be.visible')
            cy.get('[data-testid=incomeWithholdingNetIncomeValue]').should('have.text', '$96,450').and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalFedIncomeLabel]').should('have.text', content.results.inwTotalwithheld).and('be.visible')
            cy.get('[data-testid=incomeWithholdingTotalFedIncomeValue]').should('have.text', '$11,250').and('be.visible')
            cy.get('[data-testid=incomeWithholdingProjectedWithheldLabel]').should('have.text', content.results.inwProjectedWithheld).and('be.visible')
            cy.get('[data-testid=incomeWithholdingProjectedWithheldValue]').should('have.text', '$12,650').and('be.visible')
              // Expand first job
              cy.get('[data-testid=jobNestedAccordion1-trigger]').click()
              cy.get('[data-testid=incomeJobWagesTips1Label]').should('have.text', content.results.incomJobWagesLabel).and('be.visible')
              cy.get('[data-testid=incomeJobWagesTips1Value]').should('have.text', '$100,000').and('be.visible')
              cy.get('[data-testid=incomeJobTotalFedIncome1Label]').should('have.text', content.results.incomeFederalIncomLabel).and('be.visible')
              cy.get('[data-testid=incomeJobTotalFedIncome1Value]').should('have.text', '$11,000').and('be.visible')
              cy.get('[data-testid=incomeJobTotalNonTaxable1Label]').should('have.text', content.results.incomeNontaxDeductions).and('be.visible')
              cy.get('[data-testid=incomeJobTotalNonTaxable1Value]').should('have.text', '$4,800')
              cy.get('[data-testid=incomeJobProjectedTotalTax1Label]').should('have.text', content.results.incomeProjectedW4).and('be.visible')
              cy.get('[data-testid=incomeJobProjectedTotalTax1Value]').should('have.text', '$12,400').and('be.visible')
              // Expand "Your Other Income"
              cy.get('[data-testid=otherIncomeNestedAccordion-trigger]').click()
              cy.get('[data-testid=incomeOtherscholarshipLabel]').should('have.text', content.results.incomeOtherscholarshipLabel).and('be.visible')
              cy.get('[data-testid=incomeOtherscholarshipValue]').should('have.text', '$250').and('be.visible')
              cy.get('[data-testid=incomeOtherselfEmploymentLabel]').should('have.text', content.results.incomeOtherselfEmploymentLabel).and('be.visible')
              cy.get('[data-testid=incomeOtherselfEmploymentValue]').should('have.text', '$250').and('be.visible')
              cy.get('[data-testid=incomeOtherotherTaxableIncomeLabel]').should('have.text', content.results.incomeOtherotherTaxableIncomeLabel).and('be.visible')
              cy.get('[data-testid=incomeOtherotherTaxableIncomeValue]').should('have.text', '$250').and('be.visible')
              // cy.get('[data-testid=incomeOtherplannedEstimatedTaxPaymentsLabel]').should('have.text', content.results.incomeOtherplannedEstimatedTaxPaymentsLabel).and('be.visible')
              // cy.get('[data-testid=incomeOtherplannedEstimatedTaxPaymentsValue]').should('have.text', '$250').and('be.visible')
              cy.get('[data-testid=incomeOtherunemploymentLabel]').should('have.text', content.results.incomeOtherunemploymentLabel).and('be.visible')
              cy.get('[data-testid=incomeOtherunemploymentValue]').should('have.text', '$250').and('be.visible')
              cy.get('[data-testid=incomeOtherinvestmentsLabel]').should('have.text', content.results.incomeOtherinvestmentsLabel).and('be.visible')
              cy.get('[data-testid=incomeOtherinvestmentsValue]').should('have.text', '$250').and('be.visible')
              cy.get('[data-testid=incomeOtherotherTaxesLabel]').should('have.text', content.results.incomeOtherotherTaxesLabel).and('be.visible')
              cy.get('[data-testid=incomeOtherotherTaxesValue]').should('have.text', '$250').and('be.visible')
            })
          })
          it('Deduction Results Standard', () => {
            cy.get('@contentJSON').then((content) => {
            cy.aboutYouPage('single')
            cy.incomePage('salary', 'allYear', 'monthly', '6000', '60000', '1000', '10000')
            cy.adjustmentsPage()
            cy.get('[data-testid=deductions-input-standardDeduction]').click()
            cy.get('[data-testid=nextButton]').click()
            cy.get('[data-testid=nextButton]').click()
            // Results Page
            // Deductions Accordion
            cy.get('[data-testid=deductions-title]').should('have.text', content.results.deductionTitle).and('be.visible')
            cy.get('[datatestid=deductionsEditButton]').should('be.visible')
            cy.get('#deductionsAccordion > .m-3').should('have.text', content.results.deductionSubTitle).and('be.visible')
            cy.get('[data-testid=deductionsStandardDeductionLabel]').should('have.text', content.results.deductionsStandardDeductionLabel).and('be.visible')
            cy.get('[data-testid=deductionsStandardDeductionValue]').should('have.text', '$12,950')
              })
            })
            it('Deduction Results Itemized', () => {
              cy.get('@contentJSON').then((content) => {
              cy.aboutYouPage('single')
              cy.incomePage('salary', 'allYear', 'monthly', '6000', '60000', '1000', '10000')
              cy.adjustmentsPage()
              cy.get('[data-testid=deductions-input-itemizedDeduction]').click()
              cy.get('[data-testid="deductionPayments.medical.checked"]').click()
              cy.get('[data-testid=medical0-input]').click()
              cy.get('[data-testid=medical0-input]').type('$1000').should('have.value', '$1,000')
              cy.get('[data-testid="deductionPayments.paid.checked"]').click()
              cy.get('[data-testid=paid0-input]').click()
              cy.get('[data-testid=paid0-input]').type('$1000').should('have.value', '$1,000')
              cy.get('[data-testid="deductionPayments.qualified.checked"]').click()
              cy.get('[data-testid=qualified0-input]').click()
              cy.get('[data-testid=qualified0-input]').type('$1000').should('have.value', '$1,000')
              cy.get('[data-testid="deductionPayments.charity.checked"]').click()
              cy.get('[data-testid=charity0-input]').click()
              cy.get('[data-testid=charity0-input]').type('$5000').should('have.value', '$5,000')
              cy.get('[data-testid="deductionPayments.casualty.checked"]').click()
              cy.get('[data-testid=casualty0-input]').click()
              cy.get('[data-testid=casualty0-input]').type('$3000').should('have.value', '$3,000')
              cy.get('[data-testid="deductionPayments.other.checked"]').click()
              cy.get('[data-testid=other0-input]').click()
              cy.get('[data-testid=other0-input]').type('$1000').should('have.value', '$1,000')
              cy.get('[data-testid=itemizedTotal]').should('have.text', 'Itemized deductions entered: $12,000')
              cy.get('[data-testid=itemized] > .MuiButtonBase-root').should('be.visible').click()
              cy.get('[data-testid=nextButton]').click()
              cy.get('[data-testid=nextButton]').click()
              // Results Page
              // Deductions Accordion
              cy.get('[data-testid=deductions-title]').should('have.text', content.results.deductionTitle).and('be.visible')
              cy.get('[datatestid=deductionsEditButton]').should('be.visible')
              cy.get('#deductionsAccordion > .m-3').should('have.text', content.results.deductionSubTitle).and('be.visible')
              cy.get('[data-testid=deductionsStandardDeductionLabel]').should('have.text', content.results.deductionsStandardDeductionLabel).and('be.visible')
              cy.get('[data-testid=deductionsStandardDeductionValue]').should('have.text', '$12,950')
              cy.get('[data-testid=deductionsmedicalEnteredLabel]').should('have.text', content.results.deductionsmedicalEnteredLabel).and('be.visible')
              cy.get('[data-testid=deductionsmedicalEnteredValue]').should('have.text', '$1,000')
              cy.get('[data-testid=deductionspaidLabel]').should('have.text', content.results.deductionspaidLabel).and('be.visible')
              cy.get('[data-testid=deductionspaidValue]').should('have.text', '$1,000')
              cy.get('[data-testid=deductionscharityLabel]').should('have.text', content.results.deductionscharityLabel).and('be.visible')
              cy.get('[data-testid=deductionscharityValue]').should('have.text', '$5,000')
              cy.get('[data-testid=deductionsotherLabel]').should('have.text', content.results.deductionsotherLabel).and('be.visible')
              cy.get('[data-testid=deductionsotherValue]').should('have.text', '$1,000')
              cy.get('[data-testid=deductionsTotalLabel]').should('have.text', content.results.deductionsTotalLabel).and('be.visible')
              cy.get('[data-testid=deductionsTotalValue]').should('have.text', '$11,000')
              cy.get('[data-testid=deductionPaymentsmedicalAllowedLabel]').should('have.text', content.results.deductionPaymentsmedicalAllowedLabel).and('be.visible')
              cy.get('[data-testid=deductionPaymentsmedicalAllowedValue]').should('have.text', '$0')
              cy.get('[data-testid=deductionsqualifiedLabel]').should('have.text', content.results.deductionsqualifiedLabel).and('be.visible')
              cy.get('[data-testid=deductionsqualifiedValue]').should('have.text', '$1,000')
              cy.get('[data-testid=deductionscasualtyLabel]').should('have.text', content.results.deductionscasualtyLabel).and('be.visible')
              cy.get('[data-testid=deductionscasualtyValue]').should('have.text', '$3,000')
              cy.get('[data-testid=deductionsItemizedDeductionsLabel]').should('have.text', content.results.deductionsItemizedDeductionsLabel).and('be.visible')
              cy.get('[data-testid=deductionsItemizedDeductionsValue]').should('have.text', 'Yes')
            })
          })
        })
